{"ast":null,"code":"import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\nvar sagaMiddleware = createSagaMiddleware();\nvar middlewares = [sagaMiddleware];\n\nfunction configureStore(preloadedState) {\n  var composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  var store = createStore(reducers, preloadedState, composeEnhancers(applyMiddleware.apply(void 0, middlewares)));\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"../reducers/index\", function () {\n      var nextRootReducer = require(\"../reducers/index\");\n\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n\nvar store = configureStore();\nexport default store;","map":{"version":3,"sources":["/Users/jaylenthomas/Downloads/modot_web/titanv2/src/redux/store/index.js"],"names":["createStore","applyMiddleware","compose","reducers","createSagaMiddleware","rootSaga","sagaMiddleware","middlewares","configureStore","preloadedState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","run","module","hot","accept","nextRootReducer","require","replaceReducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,eAAtB,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,aAArB;AACA,OAAOC,oBAAP,MAAiC,YAAjC;AACA,OAAOC,QAAP,MAAqB,gBAArB;AAEA,IAAMC,cAAc,GAAGF,oBAAoB,EAA3C;AAEA,IAAMG,WAAW,GAAG,CAACD,cAAD,CAApB;;AAEA,SAASE,cAAT,CAAwBC,cAAxB,EAAwC;AAEtC,MAAMC,gBAAgB,GAAGC,MAAM,CAACC,oCAAP,IAA+CV,OAAxE;AACA,MAAMW,KAAK,GAAGb,WAAW,CAACG,QAAD,EAAWM,cAAX,EAA2BC,gBAAgB,CAClET,eAAe,MAAf,SAAmBM,WAAnB,CADkE,CAA3C,CAAzB;AAIAD,EAAAA,cAAc,CAACQ,GAAf,CAAmBT,QAAnB;;AAEA,MAAIU,MAAM,CAACC,GAAX,EAAgB;AACdD,IAAAA,MAAM,CAACC,GAAP,CAAWC,MAAX,CAAkB,mBAAlB,EAAuC,YAAM;AAC3C,UAAMC,eAAe,GAAGC,OAAO,CAAC,mBAAD,CAA/B;;AACAN,MAAAA,KAAK,CAACO,cAAN,CAAqBF,eAArB;AACD,KAHD;AAID;;AAED,SAAOL,KAAP;AACD;;AAED,IAAMA,KAAK,GAAGL,cAAc,EAA5B;AAEA,eAAeK,KAAf","sourcesContent":["import { createStore, applyMiddleware, compose } from \"redux\";\nimport reducers from \"../reducers\";\nimport createSagaMiddleware from \"redux-saga\";\nimport rootSaga from \"../sagas/index\";\n\nconst sagaMiddleware = createSagaMiddleware();\n\nconst middlewares = [sagaMiddleware];\n\nfunction configureStore(preloadedState) {\n \n  const composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n  const store = createStore(reducers, preloadedState, composeEnhancers(\n    applyMiddleware(...middlewares)\n  ));\n\n  sagaMiddleware.run(rootSaga);\n\n  if (module.hot) {\n    module.hot.accept(\"../reducers/index\", () => {\n      const nextRootReducer = require(\"../reducers/index\");\n      store.replaceReducer(nextRootReducer);\n    });\n  }\n\n  return store;\n}\n\nconst store = configureStore();\n\nexport default store;\n\n"]},"metadata":{},"sourceType":"module"}